/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zoloskivrtapp.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import zoloskivrtapp.controller.ObradaDjelatnik;
import zoloskivrtapp.controller.ObradaZivotinja;
import zoloskivrtapp.model.Djelatnik;
import zoloskivrtapp.model.Zivotinja;
import zoloskivrtapp.util.ZooException;


/**
 *
 * @author Igor
 */
public class ZivotinjaPromjena extends javax.swing.JFrame {

    private ObradaZivotinja obradaZ;
    private Zivotinja promjenaZ;
    private JList<Zivotinja> lista;

    /**
     * Creates new form ZivotinjaPromjena
     */
    public ZivotinjaPromjena() {
        super();
        initComponents();
        setTitle("Životinje");
    }

    public ZivotinjaPromjena(LocalDate datumR, LocalDate datumD, LocalDate datumS,Zivotinja s, ObradaZivotinja oz, JList<Zivotinja> lista) {
        initComponents();
        setTitle("Životinje");
        Date dateS = null;
        if (datumS != null) {
            dateS = Date.from(datumS.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());
        }
        promjenaZ = s;
        obradaZ = oz;
        napuniView(s.getIme(), s.getZivotinjskaVrsta(), s.getVrsta(), s.getDjelatnik(), Date.from(datumR.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()), Date.from(datumD.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()), dateS);
        this.lista=lista;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtVrsta = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dpDD = new com.github.lgooddatepicker.components.DatePicker();
        jLabel5 = new javax.swing.JLabel();
        dpDR = new com.github.lgooddatepicker.components.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        dpDS = new com.github.lgooddatepicker.components.DatePicker();
        cmbDjelatnik = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnPromjena = new javax.swing.JButton();
        lblUspjeh = new javax.swing.JLabel();
        cmbZivotinjskeVrste = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Izmjena postojeće životinje");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Vrsta");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 96, -1, -1));
        getContentPane().add(txtVrsta, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 118, 145, -1));
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 332, -1, -1));

        jLabel4.setText("Datum dolaska");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 158, -1, -1));
        getContentPane().add(dpDD, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 180, -1, -1));

        jLabel5.setText("Datum rođenja");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 96, -1, -1));
        getContentPane().add(dpDR, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 119, -1, -1));

        jLabel6.setText("Datum smrti");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 158, -1, -1));
        getContentPane().add(dpDS, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 180, -1, -1));

        cmbDjelatnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDjelatnikActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDjelatnik, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 241, 145, -1));

        jLabel1.setText("Ime");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 40, -1, -1));

        txtIme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImeActionPerformed(evt);
            }
        });
        getContentPane().add(txtIme, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 62, 145, -1));

        jLabel2.setText("Životinjska vrsta");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 40, -1, -1));

        jLabel9.setText("Djelatnik");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 219, -1, -1));

        btnPromjena.setText("Promjena");
        btnPromjena.setBackground(new java.awt.Color(255, 255, 0));
        btnPromjena.setToolTipText("");
        btnPromjena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjenaActionPerformed(evt);
            }
        });
        getContentPane().add(btnPromjena, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 229, 143, 40));

        lblUspjeh.setFont(new java.awt.Font("Sitka Display", 3, 14)); // NOI18N
        getContentPane().add(lblUspjeh, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 338, -1, -1));

        cmbZivotinjskeVrste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbZivotinjskeVrsteActionPerformed(evt);
            }
        });
        getContentPane().add(cmbZivotinjskeVrste, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 62, 145, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDjelatnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDjelatnikActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDjelatnikActionPerformed

    private void txtImeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImeActionPerformed

    private void btnPromjenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjenaActionPerformed
        napuniModel();
    }//GEN-LAST:event_btnPromjenaActionPerformed

    private void cmbZivotinjskeVrsteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbZivotinjskeVrsteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbZivotinjskeVrsteActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPromjena;
    private javax.swing.JComboBox<Djelatnik> cmbDjelatnik;
    private javax.swing.JComboBox<String> cmbZivotinjskeVrste;
    private com.github.lgooddatepicker.components.DatePicker dpDD;
    private com.github.lgooddatepicker.components.DatePicker dpDR;
    private com.github.lgooddatepicker.components.DatePicker dpDS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblUspjeh;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtVrsta;
    // End of variables declaration//GEN-END:variables

    private void napuniView(String ime, String zivotinjskaVrsta, String vrsta, Djelatnik djelatnik, Date datumR, Date datumD, Date datumS) {
        txtIme.setText(ime);
        ucitajDjelatnike();
        ucitajZivVrste();
        cmbZivotinjskeVrste.setSelectedItem(zivotinjskaVrsta);
        txtVrsta.setText(vrsta);
        DatePickerSettings dpDolazak
                = new DatePickerSettings(new Locale("hr", "HR"));
        dpDolazak.setFormatForDatesCommonEra("dd. MM. YYYY.");
        dpDolazak.setTranslationClear("Očisti");
        dpDolazak.setTranslationToday("Danas");
        DatePickerSettings dpRodenje
                = new DatePickerSettings(new Locale("hr", "HR"));
        dpRodenje.setFormatForDatesCommonEra("dd. MM. YYYY.");
        dpRodenje.setTranslationClear("Očisti");
        dpRodenje.setTranslationToday("Danas");
        DatePickerSettings dpSmrt
                = new DatePickerSettings(new Locale("hr", "HR"));
        dpSmrt.setFormatForDatesCommonEra("dd. MM. YYYY.");
        dpSmrt.setTranslationClear("Očisti");
        dpSmrt.setTranslationToday("Danas");
        dpDD.setSettings(dpDolazak);
        dpDR.setSettings(dpRodenje);
        dpDS.setSettings(dpSmrt);
        dpDR.setDate(datumR.toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        dpDD.setDate(datumD.toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        if (datumS != null) {
            dpDS.setDate(datumS.toInstant()
                    .atZone(ZoneId.systemDefault())
                    .toLocalDate());
        } else {
            dpDS.setDate(null);
        }
        cmbDjelatnik.setSelectedItem(djelatnik);
    }

    public void prikazi() {
        setVisible(true);
    }

    private void napuniModel() {
        obradaZ.setEntitet(promjenaZ);
        var s = obradaZ.getEntitet();
        s.setIme(txtIme.getText());
        s.setZivotinjskaVrsta((String) cmbZivotinjskeVrste.getSelectedItem());
        s.setVrsta(txtVrsta.getText());
        DatePickerSettings dpDolazak
                = new DatePickerSettings(new Locale("hr", "HR"));
        dpDolazak.setFormatForDatesCommonEra("dd. MM. YYYY.");
        dpDolazak.setTranslationClear("Očisti");
        dpDolazak.setTranslationToday("Danas");
        DatePickerSettings dpRodenje
                = new DatePickerSettings(new Locale("hr", "HR"));
        dpRodenje.setFormatForDatesCommonEra("dd. MM. YYYY.");
        dpRodenje.setTranslationClear("Očisti");
        dpRodenje.setTranslationToday("Danas");
        DatePickerSettings dpSmrt
                = new DatePickerSettings(new Locale("hr", "HR"));
        dpSmrt.setFormatForDatesCommonEra("dd. MM. YYYY.");
        dpSmrt.setTranslationClear("Očisti");
        dpSmrt.setTranslationToday("Danas");
        dpDD.setSettings(dpDolazak);
        dpDR.setSettings(dpRodenje);
        dpDS.setSettings(dpSmrt);
        s.setDatumRodenja(dpDR.getDate() != null
                ? Date.from(dpDR.getDate()
                        .atStartOfDay()
                        .atZone(ZoneId.systemDefault())
                        .toInstant())
                : null);
        s.setDatumDolaska(dpDD.getDate() != null
                ? Date.from(dpDD.getDate()
                        .atStartOfDay()
                        .atZone(ZoneId.systemDefault())
                        .toInstant())
                : null);
        s.setDatumSmrti(dpDS.getDate() != null
                ? Date.from(dpDS.getDate()
                        .atStartOfDay()
                        .atZone(ZoneId.systemDefault())
                        .toInstant())
                : null);
        s.setDjelatnik((Djelatnik) cmbDjelatnik.getSelectedItem());

        try {
            obradaZ.update();
            lblUspjeh.setText("Životinja uspješno promijenjena!");
            lista.repaint();
            
        } catch (ZooException ex) {
            JOptionPane.showMessageDialog(getRootPane(), ex.getPoruka());
        }
    }

    private void ucitajDjelatnike() {
        DefaultComboBoxModel<Djelatnik> d
                = new DefaultComboBoxModel<>();
        Djelatnik dj = new Djelatnik();
        dj.setSifra(0);
        dj.setIme("Nije ");
        dj.setPrezime("odabrano");
        d.addElement(dj);
        d.addAll(new ObradaDjelatnik().read());
        cmbDjelatnik.setModel(d);
        cmbDjelatnik.repaint();
    }


    private void ucitajZivVrste() {
        DefaultComboBoxModel<String> z
                = new DefaultComboBoxModel<>();
        z.addElement("Sisavci");
        z.addElement("Ptice");
        z.addElement("Gmazovi");
        z.addElement("Vodozemci");
        z.addElement("Ribe");
        z.addElement("Rakovi");
        z.addElement("Mekušci");
        z.addElement("Paučnjaci");
        z.addElement("Kukci");
        cmbZivotinjskeVrste.setModel(z);
        cmbZivotinjskeVrste.repaint();
    }

}
